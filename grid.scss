

//////////
// GRID //
//////////
$sm: 48em;
$md: 62em;
$lg: 75em;
@mixin flex-row {
    box-sizing: border-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: -webkit-box;
    display: flex;
    -webkit-flex: 0 1 auto;
    -ms-flex: 0 1 auto;
    -webkit-box-flex: 0;
    flex: 0 1 auto;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    flex-direction: row;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    @media only screen and (min-width: $sm) {
        width: 46rem;
    }
    @media only screen and (min-width: $md) {
        width: 62rem;
    }
    @media only screen and (min-width: $lg) {
        width: 71rem;
    }
}
@mixin flex-col {
    box-sizing: border-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: -webkit-box;
    display: flex;
    -webkit-flex: 0 1 auto;
    -ms-flex: 0 1 auto;
    -webkit-box-flex: 0;
    flex: 0 1 auto;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    flex-direction: column;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    @media only screen and (min-width: $sm) {
        width: 46rem;
    }
    @media only screen and (min-width: $md) {
        width: 62rem;
    }
    @media only screen and (min-width: $lg) {
        width: 71rem;
    }
}
@mixin flex-row-reverse {
    box-sizing: border-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: -webkit-box;
    display: flex;
    -webkit-flex: 0 1 auto;
    -ms-flex: 0 1 auto;
    -webkit-box-flex: 0;
    flex: 0 1 auto;
    -webkit-flex-direction: row-reverse;
    -ms-flex-direction: row-reverse;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    flex-direction: row-reverse;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    @media only screen and (min-width: $sm) {
        width: 46rem;
    }
    @media only screen and (min-width: $md) {
        width: 62rem;
    }
    @media only screen and (min-width: $lg) {
        width: 71rem;
    }
}
@mixin flex-col-reverse {
    box-sizing: border-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: -webkit-box;
    display: flex;
    -webkit-flex: 0 1 auto;
    -ms-flex: 0 1 auto;
    -webkit-box-flex: 0;
    flex: 0 1 auto;
    -webkit-flex-direction: column-reverse;
    -ms-flex-direction: column-reverse;
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
    flex-direction: column-reverse;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    @media only screen and (min-width: $sm) {
        width: 46rem;
    }
    @media only screen and (min-width: $md) {
        width: 62rem;
    }
    @media only screen and (min-width: $lg) {
        width: 71rem;
    }
}
// Function to calculate the width of a cell
$target: null;
$container: null;
@function calc-percent($target, $container) {
    @if $target == 0 {
        @return 0%;
    }
    @elseif $container == 0 {
        @return 0%;
    }
    @else {
        @return ($target / $container) * 100%;
    }
}
// Sets the amount of columns and stretches them fully for a flexible and responsive view
// Set the second value to a positive integer if you want to play around with more columns.
@mixin col($col-width, $col-max: 12) {
    box-sizing: border-box;
    -ms-flex-preferred-size: calc-percent($col-width, $col-max);
    -webkit-flex-basis: calc-percent($col-width, $col-max);
    flex-basis: calc-percent($col-width, $col-max);
    max-width: calc-percent($col-width, $col-max);
    padding-right: 1rem;
    padding-left: 1rem;
}
// Axis Alignment
// Uses the calc-percent function to calculate how much the column should be pushed to the right
@mixin col-offset($col-left, $col-max: 12) {
    margin-left: calc-percent($col-left, $col-max);
}
// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify: flex-start) {
    -webkit-justify-content: $justify;
    -ms-flex-pack: $justify;
    -webkit-box-pack: $justify;
    justify-content: $justify;
}
// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($items: stretch) {
    -webkit-align-items: $items;
    -ms-flex-align-items: $items;
    -webkit-box-align-items: $items;
    align-items: $items;
}
// Axis Alignment
// - applies to: flex items
// Integers. Negative values allowed.
@mixin order($order: 1) {
    -webkit-order: $order;
    -ms-flex-order: $order;
    -webkit-box-order: $order;
    order: $order;
}
// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($self: auto) {
    -webkit-align-self: $self;
    -ms-flex-align-self: $self;
    -webkit-box-align-self: $self;
    align-self: $self;
}
